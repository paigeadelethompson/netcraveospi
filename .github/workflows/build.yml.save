name: "Build NetcraveOS"

on:
  workflow_dispatch:

env:
  DEBIAN_RELEASE: bookworm 
  DEBIAN_VERSION: 12.0.0 
  ARCH: arm64

jobs:
  build:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Create installer.bin
     run: truncate -s 4G installer.bin
    - name: Create installer.bin
      run: sudo mknod -m 0660 /dev/loop254 b 7 254
    - name: Mount installer.bin as loopback device
      run: sudo losetup -P /dev/loop254 installer.bin
    - name: Build base installer image
      run: chmod +x create-debian-usb-key.sh && sudo DEBIAN_RELEASE=$DEBIAN_RELEASE DEBIAN_VERSION=$DEBIAN_VERSION ARCH=$ARCH ./create-debian-usb-key.sh /dev/loop254
    - name: Docker build
      run: docker build -t surv:latest . 
    - name: Docker export
      run: cd /mnt ; docker save surv:latest | tar -xvpf
    - name: Add configs
      run: cp fstab /mnt/etc/ ; cp issue.net /mnt/etc/issue.net ; cp sshd_config /mnt/etc/ssh ; cp 10-eth.network /mnt/etc/systemd/network ; mkdir -p /mnt/etc/nftables ; cp nftables.nft /mnt/etc/nftables
    - name: Unmount 
    - run: sync ; sync ; umount /mnt/boot/efi ; umount /mnt/home ; umount /mnt
    - name: Disconnect installer.bin
      run: losetup -D /dev/loop254
    - name: sha256sum installer.bin
      run: sha256sum installer.bin > installer.bin.sha256sum 
    - name: Move into directory
      run:  mkdir surveillance_system_os && mv installer.* netcrave_os_installer/
    - name: Archive directory
      run: zip -r netcrave_os_installer.zip netcrave_os_installer
    - name: Create GH release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: falsep
        release_name: ${{ env.DEBIAN_VERSION }}_${{ env.ARCH }}
        tag_name: ${{ env.DEBIAN_VERSION }}_${{ env.ARCH }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload zipped image to release artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./netcrave_os_installer.zip
        asset_name: netcrave_os_installer.zip
        asset_content_type: application/zip
